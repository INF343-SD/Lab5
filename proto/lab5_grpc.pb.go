// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.12
// source: lab5.proto

package Broker

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// Laboratorio_5Client is the client API for Laboratorio_5 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type Laboratorio_5Client interface {
	Agregar_Base_Broker(ctx context.Context, in *Ing_Broker_AgregarBase, opts ...grpc.CallOption) (*Broker_Ing, error)
	Agregar_Base_Fulcrum(ctx context.Context, in *Ing_Fulcrum_AgregarBase, opts ...grpc.CallOption) (*Fulcrum_Ing, error)
	Renombrar_Base_Broker(ctx context.Context, in *Ing_Broker_RenombrarBase, opts ...grpc.CallOption) (*Broker_Ing, error)
	Renombrar_Base_Fulcrum(ctx context.Context, in *Ing_Fulcrum_RenombrarBase, opts ...grpc.CallOption) (*Fulcrum_Ing, error)
	Actualizar_Valor_Broker(ctx context.Context, in *Ing_Broker_ActualizarValor, opts ...grpc.CallOption) (*Broker_Ing, error)
	Actualizar_Valor_Fulcrum(ctx context.Context, in *Ing_Fulcrum_ActualizarValor, opts ...grpc.CallOption) (*Fulcrum_Ing, error)
	Borrar_Base_Broker(ctx context.Context, in *Ing_Broker_BorrarBase, opts ...grpc.CallOption) (*Broker_Ing, error)
	Borrar_Base_Fulcrum(ctx context.Context, in *Ing_Fulcrum_BorrarBase, opts ...grpc.CallOption) (*Fulcrum_Ing, error)
	GetEnemigos_Broker(ctx context.Context, in *Kais_Broker, opts ...grpc.CallOption) (*Broker_Kais, error)
	GetEnemigos_Fulcrum(ctx context.Context, in *Kais_Fulcrum, opts ...grpc.CallOption) (*Fulcrum_Kais, error)
}

type laboratorio_5Client struct {
	cc grpc.ClientConnInterface
}

func NewLaboratorio_5Client(cc grpc.ClientConnInterface) Laboratorio_5Client {
	return &laboratorio_5Client{cc}
}

func (c *laboratorio_5Client) Agregar_Base_Broker(ctx context.Context, in *Ing_Broker_AgregarBase, opts ...grpc.CallOption) (*Broker_Ing, error) {
	out := new(Broker_Ing)
	err := c.cc.Invoke(ctx, "/broker.Laboratorio_5/Agregar_Base_Broker", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laboratorio_5Client) Agregar_Base_Fulcrum(ctx context.Context, in *Ing_Fulcrum_AgregarBase, opts ...grpc.CallOption) (*Fulcrum_Ing, error) {
	out := new(Fulcrum_Ing)
	err := c.cc.Invoke(ctx, "/broker.Laboratorio_5/Agregar_Base_Fulcrum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laboratorio_5Client) Renombrar_Base_Broker(ctx context.Context, in *Ing_Broker_RenombrarBase, opts ...grpc.CallOption) (*Broker_Ing, error) {
	out := new(Broker_Ing)
	err := c.cc.Invoke(ctx, "/broker.Laboratorio_5/Renombrar_Base_Broker", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laboratorio_5Client) Renombrar_Base_Fulcrum(ctx context.Context, in *Ing_Fulcrum_RenombrarBase, opts ...grpc.CallOption) (*Fulcrum_Ing, error) {
	out := new(Fulcrum_Ing)
	err := c.cc.Invoke(ctx, "/broker.Laboratorio_5/Renombrar_Base_Fulcrum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laboratorio_5Client) Actualizar_Valor_Broker(ctx context.Context, in *Ing_Broker_ActualizarValor, opts ...grpc.CallOption) (*Broker_Ing, error) {
	out := new(Broker_Ing)
	err := c.cc.Invoke(ctx, "/broker.Laboratorio_5/Actualizar_Valor_Broker", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laboratorio_5Client) Actualizar_Valor_Fulcrum(ctx context.Context, in *Ing_Fulcrum_ActualizarValor, opts ...grpc.CallOption) (*Fulcrum_Ing, error) {
	out := new(Fulcrum_Ing)
	err := c.cc.Invoke(ctx, "/broker.Laboratorio_5/Actualizar_Valor_Fulcrum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laboratorio_5Client) Borrar_Base_Broker(ctx context.Context, in *Ing_Broker_BorrarBase, opts ...grpc.CallOption) (*Broker_Ing, error) {
	out := new(Broker_Ing)
	err := c.cc.Invoke(ctx, "/broker.Laboratorio_5/Borrar_Base_Broker", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laboratorio_5Client) Borrar_Base_Fulcrum(ctx context.Context, in *Ing_Fulcrum_BorrarBase, opts ...grpc.CallOption) (*Fulcrum_Ing, error) {
	out := new(Fulcrum_Ing)
	err := c.cc.Invoke(ctx, "/broker.Laboratorio_5/Borrar_Base_Fulcrum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laboratorio_5Client) GetEnemigos_Broker(ctx context.Context, in *Kais_Broker, opts ...grpc.CallOption) (*Broker_Kais, error) {
	out := new(Broker_Kais)
	err := c.cc.Invoke(ctx, "/broker.Laboratorio_5/GetEnemigos_Broker", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laboratorio_5Client) GetEnemigos_Fulcrum(ctx context.Context, in *Kais_Fulcrum, opts ...grpc.CallOption) (*Fulcrum_Kais, error) {
	out := new(Fulcrum_Kais)
	err := c.cc.Invoke(ctx, "/broker.Laboratorio_5/GetEnemigos_Fulcrum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Laboratorio_5Server is the server API for Laboratorio_5 service.
// All implementations must embed UnimplementedLaboratorio_5Server
// for forward compatibility
type Laboratorio_5Server interface {
	Agregar_Base_Broker(context.Context, *Ing_Broker_AgregarBase) (*Broker_Ing, error)
	Agregar_Base_Fulcrum(context.Context, *Ing_Fulcrum_AgregarBase) (*Fulcrum_Ing, error)
	Renombrar_Base_Broker(context.Context, *Ing_Broker_RenombrarBase) (*Broker_Ing, error)
	Renombrar_Base_Fulcrum(context.Context, *Ing_Fulcrum_RenombrarBase) (*Fulcrum_Ing, error)
	Actualizar_Valor_Broker(context.Context, *Ing_Broker_ActualizarValor) (*Broker_Ing, error)
	Actualizar_Valor_Fulcrum(context.Context, *Ing_Fulcrum_ActualizarValor) (*Fulcrum_Ing, error)
	Borrar_Base_Broker(context.Context, *Ing_Broker_BorrarBase) (*Broker_Ing, error)
	Borrar_Base_Fulcrum(context.Context, *Ing_Fulcrum_BorrarBase) (*Fulcrum_Ing, error)
	GetEnemigos_Broker(context.Context, *Kais_Broker) (*Broker_Kais, error)
	GetEnemigos_Fulcrum(context.Context, *Kais_Fulcrum) (*Fulcrum_Kais, error)
	mustEmbedUnimplementedLaboratorio_5Server()
}

// UnimplementedLaboratorio_5Server must be embedded to have forward compatible implementations.
type UnimplementedLaboratorio_5Server struct {
}

func (UnimplementedLaboratorio_5Server) Agregar_Base_Broker(context.Context, *Ing_Broker_AgregarBase) (*Broker_Ing, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Agregar_Base_Broker not implemented")
}
func (UnimplementedLaboratorio_5Server) Agregar_Base_Fulcrum(context.Context, *Ing_Fulcrum_AgregarBase) (*Fulcrum_Ing, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Agregar_Base_Fulcrum not implemented")
}
func (UnimplementedLaboratorio_5Server) Renombrar_Base_Broker(context.Context, *Ing_Broker_RenombrarBase) (*Broker_Ing, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Renombrar_Base_Broker not implemented")
}
func (UnimplementedLaboratorio_5Server) Renombrar_Base_Fulcrum(context.Context, *Ing_Fulcrum_RenombrarBase) (*Fulcrum_Ing, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Renombrar_Base_Fulcrum not implemented")
}
func (UnimplementedLaboratorio_5Server) Actualizar_Valor_Broker(context.Context, *Ing_Broker_ActualizarValor) (*Broker_Ing, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Actualizar_Valor_Broker not implemented")
}
func (UnimplementedLaboratorio_5Server) Actualizar_Valor_Fulcrum(context.Context, *Ing_Fulcrum_ActualizarValor) (*Fulcrum_Ing, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Actualizar_Valor_Fulcrum not implemented")
}
func (UnimplementedLaboratorio_5Server) Borrar_Base_Broker(context.Context, *Ing_Broker_BorrarBase) (*Broker_Ing, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Borrar_Base_Broker not implemented")
}
func (UnimplementedLaboratorio_5Server) Borrar_Base_Fulcrum(context.Context, *Ing_Fulcrum_BorrarBase) (*Fulcrum_Ing, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Borrar_Base_Fulcrum not implemented")
}
func (UnimplementedLaboratorio_5Server) GetEnemigos_Broker(context.Context, *Kais_Broker) (*Broker_Kais, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEnemigos_Broker not implemented")
}
func (UnimplementedLaboratorio_5Server) GetEnemigos_Fulcrum(context.Context, *Kais_Fulcrum) (*Fulcrum_Kais, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEnemigos_Fulcrum not implemented")
}
func (UnimplementedLaboratorio_5Server) mustEmbedUnimplementedLaboratorio_5Server() {}

// UnsafeLaboratorio_5Server may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to Laboratorio_5Server will
// result in compilation errors.
type UnsafeLaboratorio_5Server interface {
	mustEmbedUnimplementedLaboratorio_5Server()
}

func RegisterLaboratorio_5Server(s grpc.ServiceRegistrar, srv Laboratorio_5Server) {
	s.RegisterService(&Laboratorio_5_ServiceDesc, srv)
}

func _Laboratorio_5_Agregar_Base_Broker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Ing_Broker_AgregarBase)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Laboratorio_5Server).Agregar_Base_Broker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/broker.Laboratorio_5/Agregar_Base_Broker",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Laboratorio_5Server).Agregar_Base_Broker(ctx, req.(*Ing_Broker_AgregarBase))
	}
	return interceptor(ctx, in, info, handler)
}

func _Laboratorio_5_Agregar_Base_Fulcrum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Ing_Fulcrum_AgregarBase)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Laboratorio_5Server).Agregar_Base_Fulcrum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/broker.Laboratorio_5/Agregar_Base_Fulcrum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Laboratorio_5Server).Agregar_Base_Fulcrum(ctx, req.(*Ing_Fulcrum_AgregarBase))
	}
	return interceptor(ctx, in, info, handler)
}

func _Laboratorio_5_Renombrar_Base_Broker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Ing_Broker_RenombrarBase)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Laboratorio_5Server).Renombrar_Base_Broker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/broker.Laboratorio_5/Renombrar_Base_Broker",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Laboratorio_5Server).Renombrar_Base_Broker(ctx, req.(*Ing_Broker_RenombrarBase))
	}
	return interceptor(ctx, in, info, handler)
}

func _Laboratorio_5_Renombrar_Base_Fulcrum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Ing_Fulcrum_RenombrarBase)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Laboratorio_5Server).Renombrar_Base_Fulcrum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/broker.Laboratorio_5/Renombrar_Base_Fulcrum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Laboratorio_5Server).Renombrar_Base_Fulcrum(ctx, req.(*Ing_Fulcrum_RenombrarBase))
	}
	return interceptor(ctx, in, info, handler)
}

func _Laboratorio_5_Actualizar_Valor_Broker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Ing_Broker_ActualizarValor)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Laboratorio_5Server).Actualizar_Valor_Broker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/broker.Laboratorio_5/Actualizar_Valor_Broker",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Laboratorio_5Server).Actualizar_Valor_Broker(ctx, req.(*Ing_Broker_ActualizarValor))
	}
	return interceptor(ctx, in, info, handler)
}

func _Laboratorio_5_Actualizar_Valor_Fulcrum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Ing_Fulcrum_ActualizarValor)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Laboratorio_5Server).Actualizar_Valor_Fulcrum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/broker.Laboratorio_5/Actualizar_Valor_Fulcrum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Laboratorio_5Server).Actualizar_Valor_Fulcrum(ctx, req.(*Ing_Fulcrum_ActualizarValor))
	}
	return interceptor(ctx, in, info, handler)
}

func _Laboratorio_5_Borrar_Base_Broker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Ing_Broker_BorrarBase)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Laboratorio_5Server).Borrar_Base_Broker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/broker.Laboratorio_5/Borrar_Base_Broker",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Laboratorio_5Server).Borrar_Base_Broker(ctx, req.(*Ing_Broker_BorrarBase))
	}
	return interceptor(ctx, in, info, handler)
}

func _Laboratorio_5_Borrar_Base_Fulcrum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Ing_Fulcrum_BorrarBase)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Laboratorio_5Server).Borrar_Base_Fulcrum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/broker.Laboratorio_5/Borrar_Base_Fulcrum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Laboratorio_5Server).Borrar_Base_Fulcrum(ctx, req.(*Ing_Fulcrum_BorrarBase))
	}
	return interceptor(ctx, in, info, handler)
}

func _Laboratorio_5_GetEnemigos_Broker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Kais_Broker)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Laboratorio_5Server).GetEnemigos_Broker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/broker.Laboratorio_5/GetEnemigos_Broker",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Laboratorio_5Server).GetEnemigos_Broker(ctx, req.(*Kais_Broker))
	}
	return interceptor(ctx, in, info, handler)
}

func _Laboratorio_5_GetEnemigos_Fulcrum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Kais_Fulcrum)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Laboratorio_5Server).GetEnemigos_Fulcrum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/broker.Laboratorio_5/GetEnemigos_Fulcrum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Laboratorio_5Server).GetEnemigos_Fulcrum(ctx, req.(*Kais_Fulcrum))
	}
	return interceptor(ctx, in, info, handler)
}

// Laboratorio_5_ServiceDesc is the grpc.ServiceDesc for Laboratorio_5 service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Laboratorio_5_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "broker.Laboratorio_5",
	HandlerType: (*Laboratorio_5Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Agregar_Base_Broker",
			Handler:    _Laboratorio_5_Agregar_Base_Broker_Handler,
		},
		{
			MethodName: "Agregar_Base_Fulcrum",
			Handler:    _Laboratorio_5_Agregar_Base_Fulcrum_Handler,
		},
		{
			MethodName: "Renombrar_Base_Broker",
			Handler:    _Laboratorio_5_Renombrar_Base_Broker_Handler,
		},
		{
			MethodName: "Renombrar_Base_Fulcrum",
			Handler:    _Laboratorio_5_Renombrar_Base_Fulcrum_Handler,
		},
		{
			MethodName: "Actualizar_Valor_Broker",
			Handler:    _Laboratorio_5_Actualizar_Valor_Broker_Handler,
		},
		{
			MethodName: "Actualizar_Valor_Fulcrum",
			Handler:    _Laboratorio_5_Actualizar_Valor_Fulcrum_Handler,
		},
		{
			MethodName: "Borrar_Base_Broker",
			Handler:    _Laboratorio_5_Borrar_Base_Broker_Handler,
		},
		{
			MethodName: "Borrar_Base_Fulcrum",
			Handler:    _Laboratorio_5_Borrar_Base_Fulcrum_Handler,
		},
		{
			MethodName: "GetEnemigos_Broker",
			Handler:    _Laboratorio_5_GetEnemigos_Broker_Handler,
		},
		{
			MethodName: "GetEnemigos_Fulcrum",
			Handler:    _Laboratorio_5_GetEnemigos_Fulcrum_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lab5.proto",
}
